library(flexdashboard)
library(here)
library(readr)
library(dplyr)
library(stringr)
library(purrr)
library(ggplot2)
library(omnibus)
library(DT)
# test if a directory named "data" exists locally
if(!dir.exists(here("data"))) { dir.create(here("data")) }
if(!file.exists(here("data", "tuition_cost.RData")) | !file.exists(here("data", "salary_potential.RData"))){
tuition_cost <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv')
salary_potential <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/salary_potential.csv')
# save the files to RData objects
save(tuition_cost, file = here("data", "tuition_cost.RData"))
save(salary_potential, file = here("data", "salary_potential.RData"))
}
# read in the data locally
tuition_cost <- get(load(here("data", "tuition_cost.RData")))
salary_potential <- get(load(here("data", "salary_potential.RData")))
View(salary_potential)
View(tuition_cost)
library(flexdashboard)
library(here)
library(readr)
library(dplyr)
library(stringr)
library(purrr)
library(ggplot2)
library(omnibus)
library(DT)
library(htmltools)
# test if a directory named "data" exists locally
if(!dir.exists(here("data"))) { dir.create(here("data")) }
if(!file.exists(here("data", "tuition_cost.RData")) | !file.exists(here("data", "salary_potential.RData"))){
tuition_cost <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv')
salary_potential <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/salary_potential.csv')
# save the files to RData objects
save(tuition_cost, file = here("data", "tuition_cost.RData"))
save(salary_potential, file = here("data", "salary_potential.RData"))
}
# read in the data locally
tuition_cost <- get(load(here("data", "tuition_cost.RData")))
salary_potential <- get(load(here("data", "salary_potential.RData")))
sp_table <- salary_potential %>% rename(state = state_name)
select(name, state, early_career_pay, mid_career_pay, stem_percent)
library(flexdashboard)
library(here)
library(readr)
library(dplyr)
library(stringr)
library(purrr)
library(ggplot2)
library(omnibus)
library(DT)
library(htmltools)
# test if a directory named "data" exists locally
if(!dir.exists(here("data"))) { dir.create(here("data")) }
if(!file.exists(here("data", "tuition_cost.RData")) | !file.exists(here("data", "salary_potential.RData"))){
tuition_cost <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv')
salary_potential <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/salary_potential.csv')
# save the files to RData objects
save(tuition_cost, file = here("data", "tuition_cost.RData"))
save(salary_potential, file = here("data", "salary_potential.RData"))
}
# read in the data locally
tuition_cost <- get(load(here("data", "tuition_cost.RData")))
salary_potential <- get(load(here("data", "salary_potential.RData")))
tc_table <- tuition_cost %>% select(name, state, type, in_state_tuition, out_of_state_tuition)
renderDataTable({
datatable(tc_table, caption = tags$caption(style = 'caption-side: top; text-align: Left;',
options = list(autoWidth = TRUE,
pageLength = 10,
scroller = TRUE,
scrollY = '600px')))
})
sp_table <- salary_potential %>% rename(state = state_name)
select(name, state, early_career_pay, mid_career_pay, stem_percent)
View(salary_potential)
library(flexdashboard)
library(here)
library(readr)
library(dplyr)
library(stringr)
library(purrr)
library(ggplot2)
library(omnibus)
library(DT)
library(htmltools)
# test if a directory named "data" exists locally
if(!dir.exists(here("data"))) { dir.create(here("data")) }
if(!file.exists(here("data", "tuition_cost.RData")) | !file.exists(here("data", "salary_potential.RData"))){
tuition_cost <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv')
salary_potential <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/salary_potential.csv')
# save the files to RData objects
save(tuition_cost, file = here("data", "tuition_cost.RData"))
save(salary_potential, file = here("data", "salary_potential.RData"))
}
# read in the data locally
tuition_cost <- get(load(here("data", "tuition_cost.RData")))
salary_potential <- get(load(here("data", "salary_potential.RData")))
tc_table <- tuition_cost %>% select(name, state, type, in_state_tuition, out_of_state_tuition)
renderDataTable({
datatable(tc_table, caption = tags$caption(style = 'caption-side: top; text-align: Left;'),
options = list(autoWidth = TRUE, pageLength = 10, scroller = TRUE, scrollY = '450px'))
})
sp_table <- salary_potential %>% rename(state = state_name) %>%
select(name, state, early_career_pay, mid_career_pay, stem_percent)
?datatable
# Chunk 1: setup
library(flexdashboard)
library(here)
library(readr)
library(dplyr)
library(stringr)
library(purrr)
library(ggplot2)
library(omnibus)
library(DT)
library(htmltools)
# test if a directory named "data" exists locally
if(!dir.exists(here("data"))) { dir.create(here("data")) }
if(!file.exists(here("data", "tuition_cost.RData")) | !file.exists(here("data", "salary_potential.RData"))){
tuition_cost <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv')
salary_potential <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/salary_potential.csv')
# save the files to RData objects
save(tuition_cost, file = here("data", "tuition_cost.RData"))
save(salary_potential, file = here("data", "salary_potential.RData"))
}
# read in the data locally
tuition_cost <- get(load(here("data", "tuition_cost.RData")))
salary_potential <- get(load(here("data", "salary_potential.RData")))
# Chunk 2
tc_table <- tuition_cost %>% select(name, state, type, in_state_tuition, out_of_state_tuition)
# Chunk 3
renderDataTable({
datatable(tc_table, caption = tags$caption(style = 'caption-side: top; text-align: Left;'),
options = list(autowidth = TRUE, pageLength = 15, searching = FALSE, scroller = TRUE, scrollY = '500px'))
})
# Chunk 4
sp_table <- salary_potential %>% rename(state = state_name) %>%
select(name, state, early_career_pay, mid_career_pay, stem_percent)
# Chunk 5
renderDataTable({
datatable(sp_table, caption = tags$caption(style = 'caption-side: top; text-align: Left;'),
options = list(autowidth = TRUE, pageLength = 15, searching = FALSE, scroller = TRUE, scrollY = '500px'))
})
tuition_cost %>% ggplot(aes(x=state)) + geom_histogram()
tuition_cost %>% ggplot(aes(x = state)) + geom_histogram()
tuition_cost %>% ggplot(aes(x = state)) + geom_histogram(stat = count)
tuition_cost %>% ggplot(aes(x = state)) + geom_bar()
tuition_cost %>% ggplot(aes(x = state_code)) + geom_bar()
tuition_cost %>% ggplot(aes(x = state_code)) + geom_bar() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
tuition_cost %>% ggplot(aes(x = state_code)) +
geom_bar() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
xlab("state")
tuition_cost %>% group_by(type) %>% count()
tuition_cost %>% group_by(type) %>% count()
# Chunk 1: setup
library(flexdashboard)
library(here)
library(readr)
library(dplyr)
library(stringr)
library(purrr)
library(ggplot2)
library(omnibus)
library(DT)
library(htmltools)
library(shiny)
# test if a directory named "data" exists locally
if(!dir.exists(here("data"))) { dir.create(here("data")) }
if(!file.exists(here("data", "tuition_cost.RData")) | !file.exists(here("data", "salary_potential.RData"))){
tuition_cost <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/tuition_cost.csv')
salary_potential <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-03-10/salary_potential.csv')
# save the files to RData objects
save(tuition_cost, file = here("data", "tuition_cost.RData"))
save(salary_potential, file = here("data", "salary_potential.RData"))
}
# read in the data locally
tuition_cost <- get(load(here("data", "tuition_cost.RData")))
salary_potential <- get(load(here("data", "salary_potential.RData")))
# Chunk 2
tc_table <- tuition_cost %>% select(name, state, type, in_state_tuition, out_of_state_tuition)
# Chunk 3
renderDataTable({
datatable(tc_table, caption = tags$caption(style = 'caption-side: top; text-align: Left;'),
options = list(autowidth = TRUE, pageLength = 15, searching = FALSE, scroller = TRUE, scrollY = '500px'))
})
# Chunk 4
sp_table <- salary_potential %>% rename(state = state_name) %>%
select(name, state, early_career_pay, mid_career_pay, stem_percent)
# Chunk 5
renderDataTable({
datatable(sp_table, caption = tags$caption(style = 'caption-side: top; text-align: Left;'),
options = list(autowidth = TRUE, pageLength = 15, searching = FALSE, scroller = TRUE, scrollY = '500px'))
})
# Chunk 6
tuition_cost %>% ggplot(aes(x = state_code)) +
geom_bar() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 6)) +
xlab("state") + labs(title = "Total Number of Schools Per State")
# Chunk 7
tuition_cost %>% filter(type == "Public") %>%
ggplot(aes(x = state_code)) +
geom_bar() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 6)) +
xlab("state") + labs(title = "Total Number of Public Schools Per State")
# Chunk 8
tuition_cost %>% filter(type == "Private") %>%
ggplot(aes(x = state_code)) +
geom_bar() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, size = 6)) +
xlab("state") + labs(title = "Total Number of Private Schools Per State")
# Chunk 9
valueBox(value = formatC(mean(tuition_cost$in_state_tuition), 7),
color = "white")
# Chunk 10
valueBox(value = formatC(mean(tuition_cost$out_of_state_tuition), 7),
color = "white")
# Chunk 11
valueBox(value = formatC(mean(salary_potential$early_career_pay), 7),
color = "white")
# Chunk 12
valueBox(value = formatC(mean(salary_potential$mid_career_pay), 7),
color = "white")
# Chunk 13
selectInput(inputId = "state_selected",
label = "Select a state to explore:",
choices = salary_potential %>%
pull(state_name) %>%
unique() %>%
sort(), selected = "Alabama")
# Chunk 14
renderPlot({
dat <- salary_potential %>% filter(state_name == input$state_selected) %>% arrange(desc(mid_career_pay)) %>% slice_head(n = 10)
dat %>% ggplot(aes(x = name, y = mid_career_pay)) + geom_bar(stat = "identity") + xlab("name of school") + ylab("estimated mid career pay in USD")
})
